.. py:currentmodule:: bapsflib.lapd._hdf

The :class:`~lapdoverview.LaPDOverview` class provides a
set of tools (see :numref:`f_overview_methods`) to report the results of
the file mapping generated by :class:`~mapper.LaPDMapper`.
An instance of :class:`~lapdoverview.LaPDOverview` is
bound to :class:`~file.File` as the
:attr:`~file.File.overview` attribute and will report
the current status of the mapping object.

.. code-block:: python3

    >>> from bapsflib import lapd
    >>> f = lapd.File('test.hdf5')
    >>> isinstance(f.overview, lapd._hdf.lapdoverview.LaPDOverview)
    True

Thus, if any changes are made to the mapping object
(:attr:`~bapsflib.lapd.File.file_map`), which could happen for
certain control devices [*]_, then those changes will be reflected in the
overview report.

Executing :code:`f.overview.print()` will print to screen the entire
mapping report and :code:`f.overview.save()` will print the report to
a text file with the same name as the HDF5 file and in the same
location.  The report is divided into three blocks:

    #. General File and Experimental Info

        * This block contains information on the file (name, path, etc.),
          the experiment (exp. name, investigator, etc.), and the
          experimental run setup (run name, description, etc.).
        * Example:

          .. include:: ./file_overview__sample_general.inc.rst

    #. Discovery Report

        * This block gives a brief report on what devices the
          :class:`~mapper.LaPDMapper` class discovered.
        * There are no details about each discovered device, just what
          was discovered.
        * Example:

          .. include:: ./file_overview__sample_brief.inc.rst

    #. Detailed Report

        * This block reports details on the mapping results for each
          discovered device (MSI diagnostics, control devices, and
          digitizers).
        * Basically reports the constructed ``configs`` dictionary of
          each devices mapping object.
        * Example:

          .. include:: ./file_overview__sample_detailed.inc.rst


:class:`~lapdoverview.LaPDOverview` also provides the ability to report
only snippets of the report, see :numref:`f_overview_methods` below.

.. _f_overview_methods:

.. csv-table:: "Methods provided by
               :class:`~lapdoverview.LaPDOverview`
               for reporting a HDF5 file overview"
    :header: "Method", "Description and Call"
    :widths: 15, 60

    :meth:`~lapdoverview.LaPDOverview.print`, "
    Print to screen the entire overview.

    >>> f.overview.print()
    "
    :meth:`~lapdoverview.LaPDOverview.save`, "
    Save the report to a file given by ``filename``.

    >>> f.overview.save(filename='foo.txt')

    |

    If ``filename`` is omitted, then the report is saved to a text file
    with the same name as the HDF5 file and in the same location.
    "
    :meth:`~lapdoverview.LaPDOverview.report_general`, "
    Print the general info block.

    >>> f.overview.report_general()
    "
    :meth:`~lapdoverview.LaPDOverview.report_discovery`, "
    Print the discovery report block.

    >>> f.overview.report_discovery()
    "
    :meth:`~lapdoverview.LaPDOverview.report_details`, "
    Print the detail report block.

    >>> f.overview.report_details()
    "
    :meth:`~lapdoverview.LaPDOverview.report_controls`, "
    Print the detail report block for all control devices.

    >>> f.overview.report_controls()

    |

    Print the detail report block for a specific control device
    (e.g. **Waveform**).

    >>> f.overview.report_controls(name='Waveform')
    "
    :meth:`~lapdoverview.LaPDOverview.report_digitizers`, "
    Print the detail report block for all digitizers.

    >>> f.overview.report_digitizers()

    |

    Print the detail report block for a specific digitizer
    (e.g. **SIS 3301**).

    >>> f.overview.report_digtitizers(name='SIS 3301')
    "
    :meth:`~lapdoverview.LaPDOverview.report_msi`, "
    Print the detail report block for all MSI diagnostics.

    >>> f.overview.report_msi()

    |

    Print the detail report block for a specific MSI diagnostic
    (e.g. **Discharge**).

    >>> f.overview.report_msi(name='Discharge')
    "

.. [*] the mapping configuration for command list focused control
    devices can be modified when the command list is parsed (
    :red:`provide a link to command list control device section here once written`)
